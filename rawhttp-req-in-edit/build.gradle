plugins {
    id 'java-library'
    id "org.jetbrains.kotlin.jvm"
    id 'maven-publish'
    id 'signing'
}

description = 'RawHTTP req-in-edit module (Jetbrains HTTP format)'
version rawHttpReqInEditVersion

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

ext.graalVersion = '20.2.0'

dependencies {
    api project(':rawhttp-core')
    api project(':rawhttp-cookies')
    implementation "org.graalvm.sdk:graal-sdk:$graalVersion"
    implementation "org.graalvm.js:js:$graalVersion"
    implementation 'org.webjars.npm:mustache:3.1.0'
    compileOnly 'org.jetbrains:annotations:22.0.0'
    testImplementation project(':rawhttp-core')
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect"
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
}


jar {
    manifest {
        attributes 'Implementation-Title': 'rawhttp.cookies',
                'Implementation-Version': rawHttpCookiesVersion,
                'Implementation-Vendor': 'Renato Athaydes'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
    extension "jar"
}

task javadocJar(type: Jar) {
    classifier "javadoc"
    from javadoc
}

/* Publishing config */

publishing {
    publications {
        mavenJava( MavenPublication ) {
            artifactId = 'rawhttp-req-in-edit'
            from components.java
            versionMapping {
                usage( 'java-api' ) {
                    fromResolutionOf( 'runtimeClasspath' )
                }
                usage( 'java-runtime' ) {
                    fromResolutionResult()
                }
            }
            pom {
                inceptionYear = '2020'
                name = project.name
                packaging = 'jar'
                description = project.description

                url = 'https://renatoathaydes.github.io/rawhttp'

                scm {
                    connection = 'git@github.com:renatoathaydes/rawhttp.git'
                    developerConnection = 'git@github.com:renatoathaydes/rawhttp.git'
                    url = 'https://github.com/renatoathaydes/rawhttp'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'renatoathaydes'
                        name = 'Renato Athaydes'
                        email = 'renato@athaydes.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username project.properties[ 'ossrhUsername' ]?.toString()
                password project.properties[ 'ossrhPassword' ]?.toString()
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
